{"uid":"d45b945caa0145fc","name":"test_updata","fullName":"src.case.test_user.TestUser#test_updata","historyId":"8b7a5e4ed7d8562b8a6e23653e5e6a5e","time":{"start":1744713622217,"stop":1744713662077,"duration":39860},"description":"\n编辑用户\n","descriptionHtml":"<p>编辑用户</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010279d828 chromedriver + 6105128\n1   chromedriver                        0x000000010279542a chromedriver + 6071338\n2   chromedriver                        0x0000000102230600 chromedriver + 415232\n3   chromedriver                        0x00000001022822c0 chromedriver + 750272\n4   chromedriver                        0x0000000102282511 chromedriver + 750865\n5   chromedriver                        0x00000001022d29c4 chromedriver + 1079748\n6   chromedriver                        0x00000001022a863d chromedriver + 906813\n7   chromedriver                        0x00000001022cfc3d chromedriver + 1068093\n8   chromedriver                        0x00000001022a83e3 chromedriver + 906211\n9   chromedriver                        0x000000010227429a chromedriver + 692890\n10  chromedriver                        0x00000001022753f1 chromedriver + 697329\n11  chromedriver                        0x000000010275cd20 chromedriver + 5840160\n12  chromedriver                        0x0000000102760bf4 chromedriver + 5856244\n13  chromedriver                        0x0000000102737956 chromedriver + 5687638\n14  chromedriver                        0x00000001027615eb chromedriver + 5858795\n15  chromedriver                        0x0000000102726044 chromedriver + 5615684\n16  chromedriver                        0x0000000102783388 chromedriver + 5997448\n17  chromedriver                        0x000000010278354f chromedriver + 5997903\n18  chromedriver                        0x0000000102795008 chromedriver + 6070280\n19  libsystem_pthread.dylib             0x00007ff80766b18b _pthread_start + 99\n20  libsystem_pthread.dylib             0x00007ff807666ae3 thread_start + 15","statusTrace":"self = <servemanage.src.case.test_user.TestUser object at 0x105cb1590>\n\n    def test_updata(self):\n        '''\n        编辑用户\n        '''\n        teleinput=(By.XPATH,'//*[@placeholder=\"手机号\"]')\n        surebutton=(By.XPATH,'//button[@class=\"el-button el-button--primary el-button--small\"]/span[text()=\"搜索\"]')\n        updatabut=(By.XPATH,f'//*[text()=\"{self.tele}\"]/../../td[8]/div/button[2]')\n        form_inputname=(By.XPATH,'//*[@id=\"app\"]/div/div[3]/div[2]/div/div[3]/div/div[2]/form/div[1]/div/div/input')\n        form_surebut=(By.XPATH,'//*[@id=\"app\"]/div/div[3]/div[2]/div/div[3]/div/div[3]/span/button[2]')\n        form_fileinput=(By.NAME,'file')\n        assdataname=(By.XPATH,f'//*[text()=\"{self.name}\"]')\n    \n        self.driver.type_clear(teleinput)\n        self.driver.type(teleinput,self.tele)\n        self.driver.force_wait(1)\n        self.driver.click(surebutton)\n        self.driver.force_wait(1)\n        self.driver.click(updatabut)\n        self.driver.force_wait(1)\n    \n        self.driver.type(form_inputname,self.name)\n        self.driver.force_wait(1)\n        self.driver.exeute_js('document.querySelector(\".el-upload__input\").style.display=\"block\"')\n        self.driver.force_wait(1)\n        hh=os.path.abspath(\"data\")\n        path=os.path.join(hh,\"Snipaste_2025-03-18_19-36-22.png\")\n        self.driver.type(form_fileinput,path)\n        self.driver.force_wait(1)\n        self.driver.click(form_surebut)\n        self.driver.force_wait(1)\n>       assert self.driver.find_element(assdataname)\n\nsrc/case/test_user.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/utils/logger.py:89: in log_action\n    retval=func(self,*args,**kwargs)\nsrc/utils/pyselenium.py:95: in find_element\n    return WebDriverWait(self.__driver,self.__timeout).until(lambda a: a.find_element(*locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a5dc24c6d829fb29bb509c6ab3877804\")>\nmethod = <function PySelenium.find_element.<locals>.<lambda> at 0x1061eb7e0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010279d828 chromedriver + 6105128\nE       1   chromedriver                        0x000000010279542a chromedriver + 6071338\nE       2   chromedriver                        0x0000000102230600 chromedriver + 415232\nE       3   chromedriver                        0x00000001022822c0 chromedriver + 750272\nE       4   chromedriver                        0x0000000102282511 chromedriver + 750865\nE       5   chromedriver                        0x00000001022d29c4 chromedriver + 1079748\nE       6   chromedriver                        0x00000001022a863d chromedriver + 906813\nE       7   chromedriver                        0x00000001022cfc3d chromedriver + 1068093\nE       8   chromedriver                        0x00000001022a83e3 chromedriver + 906211\nE       9   chromedriver                        0x000000010227429a chromedriver + 692890\nE       10  chromedriver                        0x00000001022753f1 chromedriver + 697329\nE       11  chromedriver                        0x000000010275cd20 chromedriver + 5840160\nE       12  chromedriver                        0x0000000102760bf4 chromedriver + 5856244\nE       13  chromedriver                        0x0000000102737956 chromedriver + 5687638\nE       14  chromedriver                        0x00000001027615eb chromedriver + 5858795\nE       15  chromedriver                        0x0000000102726044 chromedriver + 5615684\nE       16  chromedriver                        0x0000000102783388 chromedriver + 5997448\nE       17  chromedriver                        0x000000010278354f chromedriver + 5997903\nE       18  chromedriver                        0x0000000102795008 chromedriver + 6070280\nE       19  libsystem_pthread.dylib             0x00007ff80766b18b _pthread_start + 99\nE       20  libsystem_pthread.dylib             0x00007ff807666ae3 thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestUser","time":{"start":1744713604247,"stop":1744713605882,"duration":1635},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_method_fixture_TestUser","time":{"start":1744713622084,"stop":1744713622211,"duration":127},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n编辑用户\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010279d828 chromedriver + 6105128\n1   chromedriver                        0x000000010279542a chromedriver + 6071338\n2   chromedriver                        0x0000000102230600 chromedriver + 415232\n3   chromedriver                        0x00000001022822c0 chromedriver + 750272\n4   chromedriver                        0x0000000102282511 chromedriver + 750865\n5   chromedriver                        0x00000001022d29c4 chromedriver + 1079748\n6   chromedriver                        0x00000001022a863d chromedriver + 906813\n7   chromedriver                        0x00000001022cfc3d chromedriver + 1068093\n8   chromedriver                        0x00000001022a83e3 chromedriver + 906211\n9   chromedriver                        0x000000010227429a chromedriver + 692890\n10  chromedriver                        0x00000001022753f1 chromedriver + 697329\n11  chromedriver                        0x000000010275cd20 chromedriver + 5840160\n12  chromedriver                        0x0000000102760bf4 chromedriver + 5856244\n13  chromedriver                        0x0000000102737956 chromedriver + 5687638\n14  chromedriver                        0x00000001027615eb chromedriver + 5858795\n15  chromedriver                        0x0000000102726044 chromedriver + 5615684\n16  chromedriver                        0x0000000102783388 chromedriver + 5997448\n17  chromedriver                        0x000000010278354f chromedriver + 5997903\n18  chromedriver                        0x0000000102795008 chromedriver + 6070280\n19  libsystem_pthread.dylib             0x00007ff80766b18b _pthread_start + 99\n20  libsystem_pthread.dylib             0x00007ff807666ae3 thread_start + 15","statusTrace":"self = <servemanage.src.case.test_user.TestUser object at 0x105cb1590>\n\n    def test_updata(self):\n        '''\n        编辑用户\n        '''\n        teleinput=(By.XPATH,'//*[@placeholder=\"手机号\"]')\n        surebutton=(By.XPATH,'//button[@class=\"el-button el-button--primary el-button--small\"]/span[text()=\"搜索\"]')\n        updatabut=(By.XPATH,f'//*[text()=\"{self.tele}\"]/../../td[8]/div/button[2]')\n        form_inputname=(By.XPATH,'//*[@id=\"app\"]/div/div[3]/div[2]/div/div[3]/div/div[2]/form/div[1]/div/div/input')\n        form_surebut=(By.XPATH,'//*[@id=\"app\"]/div/div[3]/div[2]/div/div[3]/div/div[3]/span/button[2]')\n        form_fileinput=(By.NAME,'file')\n        assdataname=(By.XPATH,f'//*[text()=\"{self.name}\"]')\n    \n        self.driver.type_clear(teleinput)\n        self.driver.type(teleinput,self.tele)\n        self.driver.force_wait(1)\n        self.driver.click(surebutton)\n        self.driver.force_wait(1)\n        self.driver.click(updatabut)\n        self.driver.force_wait(1)\n    \n        self.driver.type(form_inputname,self.name)\n        self.driver.force_wait(1)\n        self.driver.exeute_js('document.querySelector(\".el-upload__input\").style.display=\"block\"')\n        self.driver.force_wait(1)\n        hh=os.path.abspath(\"data\")\n        path=os.path.join(hh,\"Snipaste_2025-03-18_19-36-22.png\")\n        self.driver.type(form_fileinput,path)\n        self.driver.force_wait(1)\n        self.driver.click(form_surebut)\n        self.driver.force_wait(1)\n>       assert self.driver.find_element(assdataname)\n\nsrc/case/test_user.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/utils/logger.py:89: in log_action\n    retval=func(self,*args,**kwargs)\nsrc/utils/pyselenium.py:95: in find_element\n    return WebDriverWait(self.__driver,self.__timeout).until(lambda a: a.find_element(*locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a5dc24c6d829fb29bb509c6ab3877804\")>\nmethod = <function PySelenium.find_element.<locals>.<lambda> at 0x1061eb7e0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010279d828 chromedriver + 6105128\nE       1   chromedriver                        0x000000010279542a chromedriver + 6071338\nE       2   chromedriver                        0x0000000102230600 chromedriver + 415232\nE       3   chromedriver                        0x00000001022822c0 chromedriver + 750272\nE       4   chromedriver                        0x0000000102282511 chromedriver + 750865\nE       5   chromedriver                        0x00000001022d29c4 chromedriver + 1079748\nE       6   chromedriver                        0x00000001022a863d chromedriver + 906813\nE       7   chromedriver                        0x00000001022cfc3d chromedriver + 1068093\nE       8   chromedriver                        0x00000001022a83e3 chromedriver + 906211\nE       9   chromedriver                        0x000000010227429a chromedriver + 692890\nE       10  chromedriver                        0x00000001022753f1 chromedriver + 697329\nE       11  chromedriver                        0x000000010275cd20 chromedriver + 5840160\nE       12  chromedriver                        0x0000000102760bf4 chromedriver + 5856244\nE       13  chromedriver                        0x0000000102737956 chromedriver + 5687638\nE       14  chromedriver                        0x00000001027615eb chromedriver + 5858795\nE       15  chromedriver                        0x0000000102726044 chromedriver + 5615684\nE       16  chromedriver                        0x0000000102783388 chromedriver + 5997448\nE       17  chromedriver                        0x000000010278354f chromedriver + 5997903\nE       18  chromedriver                        0x0000000102795008 chromedriver + 6070280\nE       19  libsystem_pthread.dylib             0x00007ff80766b18b _pthread_start + 99\nE       20  libsystem_pthread.dylib             0x00007ff807666ae3 thread_start + 15\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"失败截图","time":{"start":1744713662130,"stop":1744713662340,"duration":210},"status":"passed","steps":[],"attachments":[{"uid":"3454eeee65e27b9f","name":"执行结果","source":"3454eeee65e27b9f.png","type":"image/png","size":145405}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5cc6472c342a7639","name":"stderr","source":"5cc6472c342a7639.txt","type":"text/plain","size":11676}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_xunit_setup_method_fixture_TestUser::0","time":{"start":1744713662340,"stop":1744713662340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestUser::0","time":{"start":1744713662823,"stop":1744713662823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"src.case"},{"name":"suite","value":"test_user"},{"name":"subSuite","value":"TestUser"},{"name":"host","value":"admindeMacBook-Pro.local"},{"name":"thread","value":"11686-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.case.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d45b945caa0145fc.json","parameterValues":[]}